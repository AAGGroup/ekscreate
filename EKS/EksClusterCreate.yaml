
export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account) 
export AWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')
export AZS=($(aws ec2 describe-availability-zones --query 'AvailabilityZones[].ZoneName' --output text --region $AWS_REGION))



sudo curl --silent --location -o /usr/local/bin/kubectl \
   https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.5/2022-01-21/bin/linux/amd64/kubectl

sudo chmod +x /usr/local/bin/kubectl


curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

sudo apt -y install jq gettext bash-completion moreutils

echo 'yq() {
  docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"
}' | tee -a ~/.bashrc && source ~/.bashrc


Create admin iam role.


curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp

sudo mv -v /tmp/eksctl /usr/local/bin

eksctl version


apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: ekspractice
  region: eu-west-3
  version: "1.22"
availabilityZones: ["eu-west-3a", "eu-west-3b", "eu-west-3c"]
managedNodeGroups:
- name: mynodegroup
  desiredCapacity: 2
  instanceType: t2.micro
  ssh:
    enableSsm: true
secretsEncryption:
  keyARN: arn:aws:kms:eu-west-3:135155369967:key/48e0e2bc-429b-40c6-ad64-fbec67ef2127

eksctl version


apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: ekspractice
  region: eu-west-3
  version: "1.22"
availabilityZones: ["${AZS[0]}", "${AZS[1]}", "${AZS[2]}"]
managedNodeGroups:
- name: nodegroup
  desiredCapacity: 3
  instanceType: t3.small
  ssh:
    enableSsm: true
iam:
  withOIDC: true
karpenter:
  version: '0.15.0'
secretsEncryption:
  keyARN: ${MASTER_ARN}


eksctl create cluster -f ekspractice.yaml




Creating and AWS CUSTOM MANAGED KEY {CMK}

aws kms create-alias --alias-name alias/ekspractice --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)

export MASTER_ARN=$(aws kms describe-key --key-id alias/ekspractice --query KeyMetadata.Arn --output text)

echo "export MASTER_ARN=${MASTER_ARN}" | tee -a ~/.bash_profile


aws kms create-alias --alias-name alias/ekspractice --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)


eksctl delete cluster --name=ekspractice


helm repo add stable https://charts.helm.sh/stable
helm repo add bitnami https://charts.bitnami.com/bitnami

